<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.parent.project</groupId>
	<artifactId>lib-parent-project</artifactId>
	<version>4.0.0</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- General properties -->
		<java.version>21</java.version>
		<sonarqube.version>3.10.0.2594</sonarqube.version>
		<junit-jupiter.version>5.10.0</junit-jupiter.version>
		<custom.base.version>3.0.0</custom.base.version>
		<joda.time.version>2.10</joda.time.version>
		<commons.lang.version>2.6</commons.lang.version>
		<commons.csv.version>1.1</commons.csv.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.mysql</groupId>
		    <artifactId>mysql-connector-j</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>2.2.220</version><!--$NO-MVN-MAN-VER$-->
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda.time.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		    <version>${commons.lang.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-csv</artifactId>
		    <version>${commons.csv.version}</version>
		</dependency>

		<!-- custom dependencies -->
		<dependency>
			<groupId>lib.base.backend</groupId>
			<artifactId>lib-base-backend</artifactId>
			<version>${custom.base.version}</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Flyway dependencies -->
		<dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-mysql</artifactId>
        </dependency>
        
        <!-- Hibernate Validator -->
	    <dependency>
	        <groupId>org.hibernate.validator</groupId>
	        <artifactId>hibernate-validator</artifactId>
	    </dependency>

	</dependencies>

	<build>
	    <pluginManagement>
	        <plugins>
	            <plugin>
	                <groupId>org.sonarsource.scanner.maven</groupId>
	                <artifactId>sonar-maven-plugin</artifactId>
	                <version>${sonarqube.version}</version>
	            </plugin>
	            <plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.11</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
	        </plugins>
	    </pluginManagement>
	    <plugins>
			<plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
            <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		    <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	        </plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>generate_jpa_metamodel</id>
			<properties>
                <prop.packaging.type>jar</prop.packaging.type>
            </properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<annotationProcessorPaths>
								<path>
									<groupId>org.hibernate</groupId>
									<artifactId>hibernate-jpamodelgen</artifactId>
								</path>
							</annotationProcessorPaths>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <prop.packaging.type>jar</prop.packaging.type>
            </properties>
            <build>
            <plugins>
	            	<plugin>
	            	<groupId>org.apache.maven.plugins</groupId>
	            	<artifactId>maven-antrun-plugin</artifactId>
	            	</plugin>
	            	<plugin>
		            	<groupId>org.springframework.boot</groupId>
		            	<artifactId>spring-boot-maven-plugin</artifactId>
		            	<configuration>
		            		<mainClass>${prop.main.class}</mainClass>
		            	</configuration>
	            	</plugin>
	            </plugins>
            </build>
        </profile>
		<profile>
            <id>dev</id>
            <properties>
                <prop.packaging.type>jar</prop.packaging.type>
            </properties>
            <build>
            	<directory>target_dev</directory>
	            <plugins>
	            	<plugin>
	            	<groupId>org.apache.maven.plugins</groupId>
	            	<artifactId>maven-antrun-plugin</artifactId>
	            	<executions>
	            		<execution>
	            			<phase>prepare-package</phase>
	            			<goals>
	            				<goal>run</goal>
	            			</goals>
	            			<configuration>
	            				<target>
	            					<copy todir="${project.build.outputDirectory}" overwrite="true">
	            						<fileset dir="src/main/resources/config_properties/dev/"></fileset>
	            					</copy>
	            					<delete dir="${project.build.outputDirectory}/config_properties"></delete>
	            				</target>
	            			</configuration>
	            		</execution>
	            	</executions>
	            	</plugin>
	            	<plugin>
		            	<groupId>org.springframework.boot</groupId>
		            	<artifactId>spring-boot-maven-plugin</artifactId>
		            	<configuration>
		            		<mainClass>${prop.main.class}</mainClass>
		            	</configuration>
	            	</plugin>
	            </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <prop.packaging.type>jar</prop.packaging.type>
            </properties>
            <build>
            	<directory>target_prod</directory>
	            <plugins>
	            	<plugin>
	            	<groupId>org.apache.maven.plugins</groupId>
	            	<artifactId>maven-antrun-plugin</artifactId>
	            	<executions>
	            		<execution>
	            			<phase>prepare-package</phase>
	            			<goals>
	            				<goal>run</goal>
	            			</goals>
	            			<configuration>
	            				<target>
	            					<copy todir="${project.build.outputDirectory}" overwrite="true">
	            						<fileset dir="src/main/resources/config_properties/prod/"></fileset>
	            					</copy>
	            					<delete dir="${project.build.outputDirectory}/config_properties"></delete>
	            				</target>
	            			</configuration>
	            		</execution>
	            	</executions>
	            	</plugin>
	            	<plugin>
		            	<groupId>org.springframework.boot</groupId>
		            	<artifactId>spring-boot-maven-plugin</artifactId>
		            	<configuration>
		            		<mainClass>${prop.main.class}</mainClass>
		            	</configuration>
	            	</plugin>
	            </plugins>
            </build>
        </profile>
        <profile>
            <id>prod_demo</id>
            <properties>
                <prop.packaging.type>war</prop.packaging.type>
            </properties>
            <build>
            	<directory>target_prod_demo</directory>
	            <plugins>
	            	<plugin>
	            	<groupId>org.apache.maven.plugins</groupId>
	            	<artifactId>maven-antrun-plugin</artifactId>
	            	<executions>
	            		<execution>
	            			<phase>prepare-package</phase>
	            			<goals>
	            				<goal>run</goal>
	            			</goals>
	            			<configuration>
	            				<target>
	            					<copy todir="${project.build.outputDirectory}" overwrite="true">
	            						<fileset dir="src/main/resources/config_properties/prod_demo/"></fileset>
	            					</copy>
	            					<delete dir="${project.build.outputDirectory}/config_properties"></delete>
	            				</target>
	            			</configuration>
	            		</execution>
	            	</executions>
	            	</plugin>
	            	<plugin>
		            	<groupId>org.springframework.boot</groupId>
		            	<artifactId>spring-boot-maven-plugin</artifactId>
		            	<configuration>
		            		<mainClass>${prop.main.class}</mainClass>
		            	</configuration>
	            	</plugin>
	            </plugins>
            </build>
        </profile>
	</profiles>

</project>